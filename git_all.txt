miko git install

https://git-scm.com/
https://git-scm.com/book/en/v2

https://knihy.nic.cz/files/edice/pro_git.pdf


https://www.itnetwork.cz/programovani/git/git-tutorial-historie

https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github


============================================================================== 
git config --global user.name "Michal Kocandrle"
git config --global user.email "miko73@seznam.cz"
git config --list
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
user.name=Michal Kocandrle
user.email=miko73@seznam.cz

============================================================================== 

git --version

============================================================================== 
 git init vytvoríte nový repositár
nahrání existující repository

git clone https://github.com/git/git.git
micha@DESKTOP-O9QT0O1 MINGW64 ~
$ git clone https://github.com/git/git.git
Cloning into 'git'...
remote: Enumerating objects: 295559, done.
remote: Total 295559 (delta 0), reused 0 (delta 0), pack-reused 295559
Receiving objects: 100% (295559/295559), 146.77 MiB | 2.76 MiB/s, done.
Resolving deltas: 100% (220270/220270), done.
Updating files: 100% (3833/3833), done.
============================================================================== 
micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
============================================================================== 
if you want to reomve local repository from git, it's only possible to remove
dir in .git in same directory.
============================================================================== 
miko git base 
miko git zaklad

.gitignore
*.swp
*~
.project
if gitignore does not work in porject it's necessary to clare 
git rm -r --cached .
then 
git commit -m "clean up"


the test if it works
git status shoul work only with wanted files.
============================================================================== 
pridat soubory na stage

git add soubor.txt
git add python_all.py
$ git status
On branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   python_all.py
        modified:   soubor.txt

to jsou soubory na stage, ktere pujdou do commitu
============================================================================== 
odstranit soubory ze stage

$ git reset soubor.txt
Unstaged changes after reset:
M       .cplus_all.cpp.swp
M       .gitignore
M       .python_all.py.un~
M       python_all.py~
M       soubor.txt
============================================================================== 
to get repository from remote sourece
create directory where you want to store the repo
git clone ../remote_repo.git .
============================================================================== 
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git remote -v
origin  https://github.com/miko73/GitMergingDemo.git (fetch)
origin  https://github.com/miko73/GitMergingDemo.git (push)

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git branch -a
* main
  remotes/origin/HEAD -> origin/main
  remotes/origin/main

============================================================================== 
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git diff

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
the differenc between local version and remote version
$ git diff HEAD
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..11435dc

============================================================================== 
$ git pull origin main
From https://github.com/miko73/GitMergingDemo
 * branch            main       -> FETCH_HEAD
Already up to date.
maen all branches are resolved, merged with main 
============================================================================== 
git push origin main
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git push origin main
Enumerating objects: 33, done.
Counting objects: 100% (32/32), done.
Delta compression using up to 4 threads
Compressing objects: 100% (23/23), done.
Writing objects: 100% (26/26), 1.13 MiB | 648.00 KiB/s, done.
Total 26 (delta 12), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (12/12), completed with 1 local object.
To https://github.com/miko73/GitMergingDemo.git
   4ff42ec..0d08cd9  main -> main

login pres browser.
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git push origin main
Enumerating objects: 33, done.
Counting objects: 100% (32/32), done.
Delta compression using up to 4 threads
Compressing objects: 100% (23/23), done.
Writing objects: 100% (26/26), 1.13 MiB | 648.00 KiB/s, done.
Total 26 (delta 12), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (12/12), completed with 1 local object.
To https://github.com/miko73/GitMergingDemo.git
   4ff42ec..0d08cd9  main -> main
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git push origin main
Enumerating objects: 33, done.
Counting objects: 100% (32/32), done.
Delta compression using up to 4 threads
Compressing objects: 100% (23/23), done.
Writing objects: 100% (26/26), 1.13 MiB | 648.00 KiB/s, done.
Total 26 (delta 12), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (12/12), completed with 1 local object.
To https://github.com/miko73/GitMergingDemo.git
   4ff42ec..0d08cd9  main -> main

============================================================================== 
create branch
git branch zkus_to_jinudy
========
select branch
git checkout zkus_to_jinudy
Switched to branch 'zkus_to_jinudy'
M       scripts_all.sql
========
$ git branch
  main
* zkus_to_jinudy
========
$ git add scripts_all.sql
========
$ git diff zkus_to_jinudy
diff --git a/scripts_all.sql b/scripts_all.sql
index ebe3d10..eeea36d 100644
--- a/scripts_all.sql
+++ b/scripts_all.sql
@@ -91808,7 +91808,7 @@ emea-occnv3-vpn.oracle-occn.com
 adc-occnv3-vpn.oracle-occn.com
 Japan-occnv3-vpn.oracle-occn.com
 ============================================================================
+tuhle zmenu dame jen do vetve
========
$ git commit -m "comit s vetvi"
[zkus_to_jinudy 22cab02] comit s vetvi
 1 file changed, 1 insertion(+), 1 deletion(-)
========
push branch to remote
$ git push origin zkus_to_jinudy
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 431 bytes | 431.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
remote:
remote: Create a pull request for 'zkus_to_jinudy' on GitHub by visiting:
remote:      https://github.com/miko73/GitMergingDemo/pull/new/zkus_to_jinudy
remote:
To https://github.com/miko73/GitMergingDemo.git
 * [new branch]      zkus_to_jinudy -> zkus_to_jinudy
========
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (zkus_to_jinudy)
$ git push origin zkus_to_jinudy
Everything up-to-date
========
$ git pull

$ git checkout my-feature

$ git merge origin/feature

$ git push origin my-feature:feature
========
$ git remote show origin
* remote origin
  Fetch URL: https://github.com/miko73/GitMergingDemo.git
  Push  URL: https://github.com/miko73/GitMergingDemo.git
  HEAD branch: main
  Remote branches:
    main           tracked
    zkus_to_jinudy tracked
  Local branch configured for 'git pull':
    main merges with remote main
  Local refs configured for 'git push':
    main           pushes to main           (up to date)
    zkus_to_jinudy pushes to zkus_to_jinudy (up to date)
========
git push <zdroj> <LokalniVetev>:<Ve­tevNaServeru>.
============================================================================== 
$ git log --oneline --decorate
22cab02 (HEAD -> zkus_to_jinudy, origin/zkus_to_jinudy) comit s vetvi
abe9742 (origin/main, origin/HEAD, main) zase zpet
ec55e04 uklid
0d08cd9 dalsi porce
e40ca16 new changes
cd5d742 vyrazeni souboru
4ff42ec Add files via upload
344bc24 int commit#
de4fc29 Add files via upload
bc6b9c8 Initial commit

============================================================================== 


========
========
========
========
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   README.md
        new file:   cplus_all.cpp
        new file:   git_all.txt
        new file:   python_all.py
        new file:   scripts_all.sql
        new file:   soubor.txt


micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git commit -m "zase zpet"

combination add and commit
git commit -a -m "comment" 

[main abe9742] zase zpet
 6 files changed, 97229 insertions(+)
 create mode 100644 README.md
 create mode 100644 cplus_all.cpp
 create mode 100644 git_all.txt
 create mode 100644 python_all.py
 create mode 100644 scripts_all.sql
 create mode 100644 soubor.txt

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git push origin main
Enumerating objects: 9, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 4 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (8/8), 1.10 MiB | 547.00 KiB/s, done.
Total 8 (delta 0), reused 1 (delta 0), pack-reused 0
To https://github.com/miko73/GitMergingDemo.git
   ec55e04..abe9742  main -> main

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$  git diff HEAD

============================================================================== 
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git branch zkus_to_jinudy

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git branch
* main
  zkus_to_jinudy



============================================================================== 
po vytvoreni souboru v adresari
C:\Users\micha\git

git add myFile.txt

$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .myFile.txt.un~
        myFile.txt
        myFile.txt~

nothing added to commit but untracked files present (use "git add" to track)
============================================================================== 
$ git add myFile.txt

micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
============================================================================== 
$  git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   myFile.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .myFile.txt.un~
        myFile.txt~

============================================================================== 
micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
$ git commit -m "Muj první commit"
[master 76ae5042af] Muj první commit
 1 file changed, 2 insertions(+)
 create mode 100644 myFile.txt
============================================================================== 
added 
"Hello World"
to file myFile.txt
$  git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   myFile.txt


============================================================================== 
pro nahrání verze znovu
$ git add myFile.txt


$  git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   myFile.txt

============================================================================== 

popis commitu
http://robots.thoughtbot.com/mmit-message
http://ablogaboutcode.com/git-history/
============================================================================== 
miko git vetve

micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
$ git branch
* master
V tuto chvíli se vypíe pouze vetev master, protoe pri klonování repositáre dochází ke klonování pouze jediné vetve. 
Jedná se o tu vetev, kterou vývojári zverejnili. To ovem neznamená, 
e projekt nemueme mít více vetví, pouze je mají vývojári lokálne u sebe.
============================================================================== 
miko tag miko git tag

agy mueme pridávat libovolne ke kterémukoliv commitu. Mueme si jimi oznacit duleitá místa v historii, 
nové verze, opravy duleitých chyb a cokoliv jiného. Vechny tagy v projektu vypíeme príkazem git tag. 
Pritom jsou tagy serazeny od nejstarích k novejím.

micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
$ git tag
gitgui-0.10.0
gitgui-0.10.1
gitgui-0.10.2
gitgui-0.11.0

.....
gitgui-0.9.3
junio-gpg-pub
v0.99
v0.99.1
...

============================================================================== 
tagem si oznacime mista v historii 
light an annotated
light tag je jen znacka 
annotade oznacuje hodne informaci, sokoro jeako commit

git tag vypise vsechnz tagy  v projektu

$ git tag LightTag
$ git tag -a AnnotedTag m Vytvoreni annoted tagu
$ git tag
AnnotedTag
LightTag
v2.6.11
v2.6.11-tree
....
============================================================================== 
odkazy na pozice v gitu
40-ti znakový hash commitu
Jméno vetve
Jméno tagu
============================================================================== 
na hash commitu se podivame
$ git log --oneline
76ae5042af (HEAD -> master, tag: LightTag) Muj první commit
ad27df6a5c (origin/master, origin/HEAD) Sync with Git 2.29.2
898f80736c (tag: v2.29.2, origin/maint) Git 2.29.2
a94bce62b9 Merge branch 'cc/doc-filter-branch-typofix' into maint
4f9f7c1442 Merge branch 'jk/committer-date-is-author-date-fix' into maint
f9b6481aed First batch
0e41cfad62 Merge branch 'dl/checkout-guess'
==============================================================================
vetve branch

$ git branch
* master
============================================================================== 
Prechod mezi commity
git tag
$ git tag
v2.6.11
v2.6.11-tree
v2.6.12
v2.6.12-rc2
v2.6.12-rc3
v2.6.12-rc4
 novejí tagy
============================================================================== 
Prechod mezi commity
git checkout
navrat na vrchol 
git checkout master. Tím prepneme na vrchol vetve master
============================================================================== 
git log v3.9..                  # commity od tagu v3.9
git log v3.8..v3.9              # commity mezi tagy v3.8 a v3.9
git log --since=1 year ago        # commity rok zpátky
git log firmware/ihex2fw.c      # commity které upravili soubor firmware/ihex2fw.c

$ git log --oneline firmware/ihex2fw.c
$ git log --since=5 years ago  --oneline firmware/ihex2fw.c
============================================================================== 
 git show b8cb464 
 ukazuje konkretni tag nebo commit
 ============================================================================== 
 mergovani


 git diff 'porovnani verzi ve vetvich



 zobrateni souboru ve obou vetvich
 $ git show :1:soubor.txt
Puvodni soubor

$ git show :2:soubor.txt
Text z prvni vetve

$ git show :3:soubor.txt
Text z druhe vetve


prepsani naseho souboru puvodni verzi
git show :1:soubor.txt > soubor.txt.




============================================================================== 
 smazani vetve
 git branch d DruhaVetev.
 git branch D <NazevVetve>. Tím rekneme Gitu, at smae vetev, i kdy v ní jsou jete stále commity. 
 Opet ale musím upozornit na ji zverejnené vetve. 
 Pokud si ji nekdo naclonovat vá repositár a vystavel na vaí vetvi svou aplikaci a vy mu ji poté smaete, 
 naprosto ho tím odríznete od zbytku projektu. 
 Proto tento zpusob mazání pouívejte jen v situacích, 
 kdy jste jete vetev nezverejnili! 
 Uetríte tím spoustu starostí a ne jen sobe :-).

============================================================================== 
vytvoreni online repozitare
README souborem. Jeho text bude zobrazován na úvodní stránce repositáre a melo by v nem být uvedeno o jaký projekt se jedná.
vytvo
pristupovy klic
C:\Users\micha>ssh-keygen -t rsa -b 4096 -C "miko73@seznam.cz"
Generating public/private rsa key pair.
Enter file in which to save the key (C:\Users\micha/.ssh/id_rsa):
Created directory 'C:\Users\micha/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in C:\Users\micha/.ssh/id_rsa.
Your public key has been saved in C:\Users\micha/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:OtaUrOJSLfl3hQY3dK8VWDlG3gx4MB75sPeyz18t5Kk miko73@seznam.cz
The key's randomart image is:
+---[RSA 4096]----+
|            +B+. |
|          ..*+*+ |
|         . ..B.oo|
|       ...o . =  |
|     o  So o +.. |
|    + .=  o oo..o|
|   ..o= .. .  +oo|
|  .. o... .  ..o.|
|   ..  . .  E  .=|
+----[SHA256]-----+
te se to musi nahrat na github
============================================================================== 
overeni pristupu na github

	C:\Users\micha>ssh -T git@github.com
The authenticity of host 'github.com (140.82.121.3)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,140.82.121.3' (RSA) to the list of known hosts.
Enter passphrase for key 'C:\Users\micha/.ssh/id_rsa':
Hi miko73! You've successfully authenticated, but GitHub does not provide shell access.
============================================================================== 
pristup pres http
Pokud budeme pouívat HTTPS, bude potreba zadávat krome hesla (tentokrát k úctu) také email. Tomu se mueme vyhnout príkazem 
git config --global credential.helper cache. 
Poté se bude cachovat heslo 15 minut. 
Pokud chceme cachovat heslo déle, pouijeme atribut 
--timeout git config --global credential.helper "cache --timeout=3600". 
Cas se zadává v sekundách (v príkladu je tedy nastavena jedna hodina).

============================================================================== 
odkazy na repozitare
git remote add <NazevZdroje> <url> vytvoríte nový, naopak príkazem git remote remove <zdroj> odkaz smaete. 
micha@DESKTOP-O9QT0O1 MINGW64 ~/git (master)
$  git remote show origin
* remote origin
  Fetch URL: https://github.com/git/git.git
  Push  URL: https://github.com/git/git.git
  HEAD branch: master
  Remote branches:
    maint  tracked
    master tracked
    next   tracked
    seen   tracked
    todo   tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (local out of date)

============================================================================== 
micha@DESKTOP-O9QT0O1 MINGW64 ~/GitMergingDemo (DruhaVetev)
$ git diff
diff --git a/soubor.txt b/soubor.txt
index ab420ac..f35cc1f 100644
--- a/soubor.txt
+++ b/soubor.txt
@@ -1 +1,2 @@
-Text z druhe vetve
\ No newline at end of file
+Text z druhe vetve
+uprava codu ve druhe vetvi vyvoje

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitMergingDemo (DruhaVetev)
$ git checkout TretiVetev '
error: Your local changes to the following files would be overwritten by checkout:
        soubor.txt
Please commit your changes or stash them before you switch branches.
Aborting
#tohle neprochazi musi se lokalni zmena v souboru promitnout do repository
git add soubor.txt
============================================================================== 
python learn git
git clone https://github.com/jerry-git/learn-python3.git
==============================================================================
get clone remote repository

git clone https://github.com/flatplanet/Intro-To-TKinter-Youtube-Course
============================================================================== 

============================================================================== 
miko aliasses in git

alias graph="git log --all --decorate --oneline --graph"
alias gr="git log --graph --pretty='format:%C(red)%d%C(reset) %C(yellow)%h%C(reset) %ar %C(green)%aN%C(reset) %s'"
gvim()
{ 
/c/Program\ Files\ \(x86\)/Vim/vim82/gvim.exe "$1" &
}
export -f 'gvim'
alias fin="find * -print| xargs grep -in"
alias lst="ls -lt|head -20"
============================================================================== 
git merge zkus_to_jinudy
try to merge def branch with the master one.
in case of confilict this is modified line
============================================================================== 
miko delete merged branch

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ gr
*  (HEAD -> main, zkus_to_jinudy) e6bad77 2 hours ago miko73 Vsechno to tam nacpu
*  (origin/zkus_to_jinudy) 22cab02 2 days ago miko73 comit s vetvi
*  (origin/main, origin/HEAD) abe9742 2 days ago miko73 zase zpet
*  ec55e04 2 days ago miko73 uklid
*  0d08cd9 2 days ago miko73 dalsi porce
*    e40ca16 9 days ago miko73 new changes
|\
| *  4ff42ec 13 days ago miko73 Add files via upload
* |  cd5d742 13 days ago miko73 vyrazeni souboru
* |  344bc24 13 days ago miko73 int commit#
|/
*  de4fc29 13 days ago miko73 Add files via upload
*  bc6b9c8 13 days ago miko73 Initial commit


(HEAD -> main, zkus_to_jinudy) we can delet "zkus_to_jinudy"

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git branch --merged
* main
  zkus_to_jinudy


micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ git branch -d zkus_to_jinudy
Deleted branch zkus_to_jinudy (was e6bad77).

micha@DESKTOP-O9QT0O1 MINGW64 ~/GitHub/GitMergingDemo (main)
$ gr
*  (HEAD -> main) e6bad77 2 hours ago miko73 Vsechno to tam nacpu

============================================================================== 
git clone https://github.com/Derrick-Sherrill/DerrickSherrill.com
============================================================================== 
remote git clone
git clone
============================================================================== 








